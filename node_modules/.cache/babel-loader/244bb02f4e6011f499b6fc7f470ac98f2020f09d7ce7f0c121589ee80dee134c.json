{"ast":null,"code":"export default function validate(values) {\n  let errors = {};\n  if (!values.username.trim()) {\n    errors.username = \"Username required\";\n  }\n  if (!values.email.trim()) {\n    errors.email = \"Email required\";\n  } else if (!/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(values.email)) {\n    errors.email = \"Email address is invalid\";\n  }\n  if (!values.mobileno.trim()) {\n    errors.mobileno = \"Mobile Number required\";\n  } else if (!/^(\\+\\d{1,3}[- ]?)?\\d{10}$/.test(values.mobileno)) {\n    errors.mobileno = \"Mobile number must be valid and contain 10 digits\";\n  }\n  if (!values.password.trim()) {\n    errors.password = \"Password required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password needs to be 6 characters or more\";\n  }\n  if (!values.password2.trim()) {\n    errors.password2 = \"Password required\";\n  } else if (values.cpassword !== values.password) {\n    errors.cpassword = \"Passwords do not match\";\n  }\n  return errors;\n}","map":{"version":3,"names":["validate","values","errors","username","trim","email","test","mobileno","password","length","password2","cpassword"],"sources":["/home/dominic/Projects/myproducts/BS/client/src/utils/Validation/Validate.js"],"sourcesContent":["export default function validate(values){\n    let errors = {}\n\n    if(!values.username.trim()){\n        errors.username =\"Username required\";\n    }\n\n    if(!values.email.trim()){\n        errors.email =\"Email required\";\n    }\n    else if(!/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(values.email)){\n        errors.email =\"Email address is invalid\";\n    }\n\n    if(!values.mobileno.trim()){\n        errors.mobileno =\"Mobile Number required\";\n    }\n    else if(!/^(\\+\\d{1,3}[- ]?)?\\d{10}$/.test(values.mobileno)){\n        errors.mobileno =\"Mobile number must be valid and contain 10 digits\";\n    }\n\n    if(!values.password.trim()){\n        errors.password =\"Password required\";\n    }\n    else if(values.password.length < 6){\n        errors.password =\"Password needs to be 6 characters or more\";\n    }\n\n    if(!values.password2.trim()){\n        errors.password2 =\"Password required\";\n    }\n    else if(values.cpassword !== values.password){\n        errors.cpassword = \"Passwords do not match\"\n    }\n\n\n    return errors;\n}"],"mappings":"AAAA,eAAe,SAASA,QAAQA,CAACC,MAAM,EAAC;EACpC,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAG,CAACD,MAAM,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAC;IACvBF,MAAM,CAACC,QAAQ,GAAE,mBAAmB;EACxC;EAEA,IAAG,CAACF,MAAM,CAACI,KAAK,CAACD,IAAI,CAAC,CAAC,EAAC;IACpBF,MAAM,CAACG,KAAK,GAAE,gBAAgB;EAClC,CAAC,MACI,IAAG,CAAC,kCAAkC,CAACC,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAC;IAC3DH,MAAM,CAACG,KAAK,GAAE,0BAA0B;EAC5C;EAEA,IAAG,CAACJ,MAAM,CAACM,QAAQ,CAACH,IAAI,CAAC,CAAC,EAAC;IACvBF,MAAM,CAACK,QAAQ,GAAE,wBAAwB;EAC7C,CAAC,MACI,IAAG,CAAC,2BAA2B,CAACD,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,EAAC;IACvDL,MAAM,CAACK,QAAQ,GAAE,mDAAmD;EACxE;EAEA,IAAG,CAACN,MAAM,CAACO,QAAQ,CAACJ,IAAI,CAAC,CAAC,EAAC;IACvBF,MAAM,CAACM,QAAQ,GAAE,mBAAmB;EACxC,CAAC,MACI,IAAGP,MAAM,CAACO,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAC;IAC/BP,MAAM,CAACM,QAAQ,GAAE,2CAA2C;EAChE;EAEA,IAAG,CAACP,MAAM,CAACS,SAAS,CAACN,IAAI,CAAC,CAAC,EAAC;IACxBF,MAAM,CAACQ,SAAS,GAAE,mBAAmB;EACzC,CAAC,MACI,IAAGT,MAAM,CAACU,SAAS,KAAKV,MAAM,CAACO,QAAQ,EAAC;IACzCN,MAAM,CAACS,SAAS,GAAG,wBAAwB;EAC/C;EAGA,OAAOT,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}